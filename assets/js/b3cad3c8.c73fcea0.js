"use strict";(self.webpackChunkga_4_dataform=self.webpackChunkga_4_dataform||[]).push([[460],{3106:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var n=t(4848),i=t(8453);const r={title:"Assertions",description:"Description of assertions available in the core free product",sidebar_position:6,slug:"/assertions"},o=void 0,a={id:"ga4dataform-doc/assertions",title:"Assertions",description:"Description of assertions available in the core free product",source:"@site/docs/ga4dataform-doc/assertions.md",sourceDirName:"ga4dataform-doc",slug:"/assertions",permalink:"/ga4dataform/docs/assertions",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ga4dataform-doc/assertions.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Assertions",description:"Description of assertions available in the core free product",sidebar_position:6,slug:"/assertions"},sidebar:"tutorialSidebar",previous:{title:"Custom Configuration",permalink:"/ga4dataform/docs/custom-configuration"},next:{title:"Permissions",permalink:"/ga4dataform/docs/permissions"}},d={},c=[{value:"Assertions logic",id:"assertions-logic",level:2},{value:"Assertions categories",id:"assertions-categories",level:2},{value:"Description",id:"description",level:2}];function l(e){const s={code:"code",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"assertions-logic",children:"Assertions logic"}),"\n",(0,n.jsxs)(s.p,{children:["Each assertion execution is logged in a dedicated BigQuery table easily accessible (",(0,n.jsx)(s.code,{children:"assertion_logs"}),"). Failed or passed assertions result are log. Assertions log table contains:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Execution date of assertions"}),"\n",(0,n.jsx)(s.li,{children:"Name of the assertion"}),"\n",(0,n.jsx)(s.li,{children:"Model on which the assertion has been run"}),"\n",(0,n.jsx)(s.li,{children:"A sample of flawed values if any anomalies has been detected (i.e list of duplicated event id)"}),"\n",(0,n.jsx)(s.li,{children:"The status of the assertion, failed or passed."}),"\n",(0,n.jsx)(s.li,{children:"A detailed error message."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Assertions can be independently deactivated in the custom_config.js configuration file."}),"\n",(0,n.jsx)(s.p,{children:"All Assertions are tagged with the string \u201cassertions\u201d"}),"\n",(0,n.jsx)(s.h2,{id:"assertions-categories",children:"Assertions categories"}),"\n",(0,n.jsx)(s.p,{children:"We have 5 main categories of assertions:"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Uniqueness"}),": Checking if the column we are testing contains duplicates values"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Validity"}),": Checking if the column or table we are testing is \u201cvalid\u201d from a business point of view. I.e session duration should never be negative."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Timeliness"}),": Checking if tables we are testing are \u201con time\u201d. I.e we expect that the max(date) of the event table to be the same as the max(date) of the session table."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Freshness"}),": We expect tables to be up to date. Freshness is an expectation that needs to be set by the user depending on their own context."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Completeness"}),": Check if the column we are testing is complete and that we are not missing any values."]}),"\n",(0,n.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(s.p,{children:"This folder contains assertion files:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Assertion"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"assertion_logs"})}),(0,n.jsx)(s.td,{children:"Building an incremental table to log results of all the assertions."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"assertions_event_id_uniqueness"})}),(0,n.jsx)(s.td,{children:"Check if the event ID is unique. Returns sample of duplicate event IDs if the assertion fails."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"assertions_session_duration_validity"})}),(0,n.jsx)(s.td,{children:"Check if session duration is not negative."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"assertions_session_id_uniqueness"})}),(0,n.jsx)(s.td,{children:"Check if session ID is unique. Returns sample of session IDs if the assertion fails."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"assertions_sessions_validity"})}),(0,n.jsxs)(s.td,{children:["Check the validation of sessions using multiple criteria: ",(0,n.jsx)(s.code,{children:"landing_page_location"}),", ",(0,n.jsx)(s.code,{children:"user_pseudo_id"}),", ",(0,n.jsx)(s.code,{children:"session_id"}),", ",(0,n.jsx)(s.code,{children:"session_date"}),", ",(0,n.jsx)(s.code,{children:"device.category"}),", and ",(0,n.jsx)(s.code,{children:"session_start_timestamp_utc"})," should not be null."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"assertions_tables_timeliness"})}),(0,n.jsx)(s.td,{children:"Check if session and events tables across different layers (staging, intermediate, etc.) are always synchronized."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"assertions_transaction_id_completeness"})}),(0,n.jsx)(s.td,{children:"Check for null or \u201cnot set\u201d transaction IDs."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"assertions_user_pseudo_id_completeness"})}),(0,n.jsxs)(s.td,{children:["Check for null ",(0,n.jsx)(s.code,{children:"user_pseudo_id"}),". Note: this is normal for cookieless pings (hits where consent is not granted)"]})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(6540);const i={},r=n.createContext(i);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);