"use strict";(self.webpackChunkga_4_dataform=self.webpackChunkga_4_dataform||[]).push([[2676],{6269:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(4848),a=t(8453);const i={title:"Default Channel Grouping",description:"Default Channel Grouping logic as a JavaScript function",slug:"/default-channel-grouping"},o=void 0,s={id:"references/default-channel-grouping",title:"Default Channel Grouping",description:"Default Channel Grouping logic as a JavaScript function",source:"@site/docs/references/default-channel-grouping.md",sourceDirName:"references",slug:"/default-channel-grouping",permalink:"/docs/default-channel-grouping",draft:!1,unlisted:!1,editUrl:"https://github.com/<your-org>/<your-repo>/edit/main/docs/docs/references/default-channel-grouping.md",tags:[],version:"current",frontMatter:{title:"Default Channel Grouping",description:"Default Channel Grouping logic as a JavaScript function",slug:"/default-channel-grouping"},sidebar:"tutorialSidebar",previous:{title:"Configuration Variable",permalink:"/docs/configuration-variable"},next:{title:"Misattribution Fixes",permalink:"/docs/misattribution-fixes"}},c={},l=[{value:"Extra channel groups",id:"extra-channel-groups",level:2}];function u(e){const n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["We\u2019ve implemented GA4\u2019s ",(0,r.jsx)(n.a,{href:"https://support.google.com/analytics/answer/9756891",children:"Default Channel Grouping"})," logic as a JavaScript function. While our implementation closely mirrors GA4's behavior, it may not provide exact matches in all cases. This is primarily because the BigQuery export does not include certain parameters that GA4 uses in its grouping logic, such as ",(0,r.jsx)(n.em,{children:"Source platform"})," and ",(0,r.jsx)(n.em,{children:"Google Ads campaign type"}),". As a result, discrepancies might appear between GA4 UI groupings and our classification."]}),"\n",(0,r.jsx)(n.h2,{id:"extra-channel-groups",children:"Extra channel groups"}),"\n",(0,r.jsxs)(n.p,{children:["In addition to the default channels, we\u2019ve introduced a configuration option for custom channels via ",(0,r.jsx)(n.strong,{children:"includes/custom/config.js"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"  EXTRA_CHANNEL_GROUPS: true\n"})}),"\n",(0,r.jsx)(n.p,{children:'When enabled, this feature will generate new channel groups such as "Organic AI".'})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(6540);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);