"use strict";(self.webpackChunkga_4_dataform=self.webpackChunkga_4_dataform||[]).push([[1237],{7918:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>o,contentTitle:()=>n,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>l});var t=s(4848),i=s(8453);const d={title:"BigQuery Cost Monitoring \ud83d\udc8e",description:"Monitor and track BigQuery processing, storage, and Looker Studio query costs for your GA4Dataform implementation",slug:"/modules/bigquery-cost-monitoring"},n="BigQuery Cost Monitoring",c={id:"modules/bigquery-cost-monitoring",title:"BigQuery Cost Monitoring \ud83d\udc8e",description:"Monitor and track BigQuery processing, storage, and Looker Studio query costs for your GA4Dataform implementation",source:"@site/docs/modules/bigquery-cost-monitoring.md",sourceDirName:"modules",slug:"/modules/bigquery-cost-monitoring",permalink:"/docs/modules/bigquery-cost-monitoring",draft:!1,unlisted:!1,editUrl:"https://github.com/<your-org>/<your-repo>/edit/main/docs/docs/modules/bigquery-cost-monitoring.md",tags:[],version:"current",frontMatter:{title:"BigQuery Cost Monitoring \ud83d\udc8e",description:"Monitor and track BigQuery processing, storage, and Looker Studio query costs for your GA4Dataform implementation",slug:"/modules/bigquery-cost-monitoring"},sidebar:"tutorialSidebar",previous:{title:"Introduction to Modules",permalink:"/docs/modules/intro"},next:{title:"Conversion Rate per Event Report \ud83d\udc8e",permalink:"/docs/modules/cvr-per-event-report"}},o={},l=[{value:"Key Features",id:"key-features",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Essential Settings",id:"essential-settings",level:3},{value:"Date Range Control",id:"date-range-control",level:3},{value:"Cost Configuration",id:"cost-configuration",level:3},{value:"Processing Costs",id:"processing-costs",level:4},{value:"Storage Costs",id:"storage-costs",level:4},{value:"Currency Conversion",id:"currency-conversion",level:4},{value:"Table Structures",id:"table-structures",level:2},{value:"<code>bq_cost_overview</code>",id:"bq_cost_overview",level:3},{value:"<code>bq_cost_processing</code>",id:"bq_cost_processing",level:3},{value:"<code>bq_cost_storage</code>",id:"bq_cost_storage",level:3},{value:"<code>bq_cost_reporting</code>",id:"bq_cost_reporting",level:3},{value:"<code>info_schema_jobs_queries</code>",id:"info_schema_jobs_queries",level:3},{value:"<code>info_schema_jobs_scripts</code>",id:"info_schema_jobs_scripts",level:3},{value:"Looker Studio Template",id:"looker-studio-template",level:2},{value:"Template Features",id:"template-features",level:3},{value:"Common Use Cases",id:"common-use-cases",level:2}];function a(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"bigquery-cost-monitoring",children:"BigQuery Cost Monitoring"})}),"\n",(0,t.jsx)(r.admonition,{title:"Edge case",type:"premium",children:(0,t.jsx)(r.p,{children:"This feature is exclusive for Premium users!"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.strong,{children:"BigQuery Cost Monitoring"})," module provides comprehensive cost tracking and analysis for your GA4Dataform implementation. It monitors processing costs, storage expenses, and Looker Studio query usage, giving you complete visibility into your BigQuery spending patterns."]}),"\n",(0,t.jsx)(r.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Processing Cost Tracking"}),": Monitor query execution and script processing costs"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Storage Cost Analysis"}),": Track table storage expenses over time"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Looker Studio Monitoring"}),": Separate tracking for reporting query costs"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Multi-Currency Support"}),": Configure exchange rates for local currency reporting"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Query Performance Analysis"}),": Identify expensive operations and optimization opportunities"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Historical Cost Trends"}),": Track cost patterns and usage growth over time"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(r.p,{children:["The module uses a JSON configuration file: ",(0,t.jsx)(r.code,{children:"includes/custom/modules/bq_cost_monitoring/config.json"})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'{\r\n  "enabled": false,\r\n  "version": 1,\r\n  "start_date": "2020-01-01",\r\n  "exchange_rate_multiplier": 1,\r\n  "bq_processing_cost": 5,\r\n  "bq_storage_cost_per_gb_per_month": 0.02\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsx)(r.h3,{id:"essential-settings",children:"Essential Settings"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Setting"}),(0,t.jsx)(r.th,{children:"Description"}),(0,t.jsx)(r.th,{children:"Example"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"enabled"})}),(0,t.jsx)(r.td,{children:"Enable/disable the module"}),(0,t.jsxs)(r.td,{children:[(0,t.jsx)(r.code,{children:"true"})," or ",(0,t.jsx)(r.code,{children:"false"})]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"version"})}),(0,t.jsx)(r.td,{children:"Configuration version for tracking changes (set by Superform Labs team)"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"1"})})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"date-range-control",children:"Date Range Control"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'"start_date": "2025-01-01"\n'})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Historical Analysis Start Date"}),": Determines how far back to analyze cost data. The module will process BigQuery job history from this date forward."]}),"\n",(0,t.jsx)(r.h3,{id:"cost-configuration",children:"Cost Configuration"}),"\n",(0,t.jsx)(r.h4,{id:"processing-costs",children:"Processing Costs"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'"bq_processing_cost": 5\n'})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Per-TB Processing Rate"}),": Cost per terabyte of data processed (default: $5 USD per TB). Adjust based on your BigQuery pricing tier or regional pricing differences."]}),"\n",(0,t.jsx)(r.h4,{id:"storage-costs",children:"Storage Costs"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'"bq_storage_cost_per_gb_per_month": 0.02\n'})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Monthly Storage Rate"}),": Cost per gigabyte per month for table storage (default: $0.02 USD). Update based on your actual BigQuery storage pricing."]}),"\n",(0,t.jsx)(r.h4,{id:"currency-conversion",children:"Currency Conversion"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'"exchange_rate_multiplier": 1\n'})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Exchange Rate Multiplier"}),": Convert USD costs to your preferred currency. Examples:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["USD: ",(0,t.jsx)(r.code,{children:"1.0"})]}),"\n",(0,t.jsxs)(r.li,{children:["EUR: ",(0,t.jsx)(r.code,{children:"0.85"})," (if 1 USD = 0.85 EUR)"]}),"\n",(0,t.jsxs)(r.li,{children:["GBP: ",(0,t.jsx)(r.code,{children:"0.75"})," (if 1 USD = 0.75 GBP)"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"table-structures",children:"Table Structures"}),"\n",(0,t.jsx)(r.h3,{id:"bq_cost_overview",children:(0,t.jsx)(r.code,{children:"bq_cost_overview"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Purpose"}),": Consolidated daily cost summary by cost type"]}),"\n",(0,t.jsx)(r.p,{children:"High-level dashboard table showing total daily costs across processing, storage, and reporting categories."}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Granularity"}),": Daily cost aggregates by cost type"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Column"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"creation_date"})}),(0,t.jsx)(r.td,{children:"Cost aggregation date (partitioned for performance)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"cost"})}),(0,t.jsx)(r.td,{children:"Total daily cost in configured currency"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"type"})}),(0,t.jsxs)(r.td,{children:["Cost category: ",(0,t.jsx)(r.code,{children:"processing_cost"}),", ",(0,t.jsx)(r.code,{children:"reporting_cost"}),", ",(0,t.jsx)(r.code,{children:"storage_cost"})]})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"bq_cost_processing",children:(0,t.jsx)(r.code,{children:"bq_cost_processing"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Purpose"}),": Detailed processing costs (excluding Looker Studio)"]}),"\n",(0,t.jsx)(r.p,{children:"Comprehensive processing cost tracking for all non-Looker Studio queries and scripts, including Dataform workflows and ad-hoc queries."}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Granularity"}),": Individual processing jobs (queries and scripts)"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Column"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"creation_date"})}),(0,t.jsx)(r.td,{children:"Job creation date (partitioned)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"id"})}),(0,t.jsx)(r.td,{children:"Unified job identifier (query_id or script_id)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"project_id"})}),(0,t.jsx)(r.td,{children:"Google Cloud project ID (clustered)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"user_email"})}),(0,t.jsx)(r.td,{children:"User who submitted the job"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"job_type"})}),(0,t.jsx)(r.td,{children:"BigQuery job type (QUERY, LOAD, EXTRACT)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"statement_type"})}),(0,t.jsx)(r.td,{children:"SQL statement type (SELECT, INSERT, SCRIPT)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"destination_table_dataset_id"})}),(0,t.jsx)(r.td,{children:"Destination dataset (if applicable)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"destination_table_id"})}),(0,t.jsx)(r.td,{children:"Destination table (if applicable)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"referenced_tables"})}),(0,t.jsx)(r.td,{children:"Array of tables referenced by query"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"query"})}),(0,t.jsx)(r.td,{children:"SQL query or script text"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"operation"})}),(0,t.jsx)(r.td,{children:"Operation type from job metadata"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"total_bytes_processed"})}),(0,t.jsx)(r.td,{children:"Raw bytes processed by job"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"total_bytes_billed"})}),(0,t.jsx)(r.td,{children:"Billable bytes (used for cost calculation)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"processed_gb"})}),(0,t.jsx)(r.td,{children:"Processed bytes in GB (total_bytes_processed / 1e9)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"billed_gb"})}),(0,t.jsx)(r.td,{children:"Billed bytes in GB (total_bytes_billed / 1e9)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"cost"})}),(0,t.jsx)(r.td,{children:"Processing cost in configured currency"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"bq_cost_storage",children:(0,t.jsx)(r.code,{children:"bq_cost_storage"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Purpose"}),": Daily table storage costs"]}),"\n",(0,t.jsxs)(r.p,{children:["Tracks storage expenses for all tables in your project, calculated from BigQuery's ",(0,t.jsx)(r.code,{children:"INFORMATION_SCHEMA.TABLE_STORAGE_USAGE_TIMELINE"}),"."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Granularity"}),": Daily storage costs per table"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Column"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"date"})}),(0,t.jsx)(r.td,{children:"Storage usage date (partitioned)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"project_id"})}),(0,t.jsx)(r.td,{children:"Google Cloud project ID (clustered)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"table_schema"})}),(0,t.jsx)(r.td,{children:"BigQuery dataset ID"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"table_name"})}),(0,t.jsx)(r.td,{children:"Table name (clustered)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"storage_in_gb_day"})}),(0,t.jsx)(r.td,{children:"Daily storage usage in GB-days"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"cost"})}),(0,t.jsx)(r.td,{children:"Daily storage cost in configured currency"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"bq_cost_reporting",children:(0,t.jsx)(r.code,{children:"bq_cost_reporting"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Purpose"}),": Looker Studio query costs"]}),"\n",(0,t.jsx)(r.p,{children:"Dedicated tracking for Looker Studio-generated queries, helping separate reporting costs from data processing expenses."}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Granularity"}),": Individual Looker Studio queries"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Column"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"creation_date"})}),(0,t.jsx)(r.td,{children:"Query creation date (partitioned)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"project_id"})}),(0,t.jsx)(r.td,{children:"Google Cloud project ID (clustered)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"user_email"})}),(0,t.jsx)(r.td,{children:"User who viewed the report"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"query_id"})}),(0,t.jsx)(r.td,{children:"Unique Looker Studio query identifier"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"source_table_name"})}),(0,t.jsx)(r.td,{children:"Table queried by Looker Studio"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"looker_studio_datasource_id"})}),(0,t.jsx)(r.td,{children:"Data source ID in Looker Studio"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"report_url"})}),(0,t.jsx)(r.td,{children:"Direct link to Looker Studio report"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"query"})}),(0,t.jsx)(r.td,{children:"SQL generated by Looker Studio"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"total_bytes_billed"})}),(0,t.jsx)(r.td,{children:"Billable bytes for the query"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"cost"})}),(0,t.jsx)(r.td,{children:"Reporting query cost in configured currency"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"info_schema_jobs_queries",children:(0,t.jsx)(r.code,{children:"info_schema_jobs_queries"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Purpose"}),": Individual query execution details"]}),"\n",(0,t.jsx)(r.p,{children:"Raw query-level data from BigQuery's INFORMATION_SCHEMA with enhanced metadata extraction and cost calculations."}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Granularity"}),": Raw query execution data with enhanced metadata"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Column"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"script_id"})}),(0,t.jsx)(r.td,{children:"Parent job ID for script executions (maps to parent_job_id from BigQuery INFORMATION_SCHEMA.JOBS)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"query_id"})}),(0,t.jsx)(r.td,{children:"Unique identifier for the individual query job (maps to job_id from BigQuery INFORMATION_SCHEMA.JOBS)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"creation_date"})}),(0,t.jsx)(r.td,{children:"Date when the job was created (partitioning column for performance optimization)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"project_id"})}),(0,t.jsx)(r.td,{children:"Google Cloud project ID where the job was executed"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"project_number"})}),(0,t.jsx)(r.td,{children:"Numeric identifier for the Google Cloud project"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"user_email"})}),(0,t.jsx)(r.td,{children:"Email address of the user who submitted the job (cluster column for performance)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"job_type"})}),(0,t.jsx)(r.td,{children:"Type of BigQuery job (e.g., QUERY, LOAD, EXTRACT) (cluster column for performance)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"statement_type"})}),(0,t.jsx)(r.td,{children:"Type of SQL statement executed (e.g., SELECT, INSERT, CREATE_TABLE) (cluster column for performance). SCRIPT statements are excluded from this table"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"destination_table_dataset_id"})}),(0,t.jsx)(r.td,{children:"Dataset ID of the destination table if the query writes results to a table"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"destination_table_id"})}),(0,t.jsx)(r.td,{children:"Table ID of the destination table if the query writes results to a table"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"referenced_tables"})}),(0,t.jsxs)(r.td,{children:["Array of tables referenced by the query - struct with ",(0,t.jsx)(r.code,{children:"project_id"}),", ",(0,t.jsx)(r.code,{children:"dataset_id"}),", ",(0,t.jsx)(r.code,{children:"table_id"})," fields for dependency tracking and lineage analysis"]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"inserted_row_count"})}),(0,t.jsx)(r.td,{children:"Number of rows inserted by DML statements (INSERT, UPDATE, DELETE)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"bi_engine_mode"})}),(0,t.jsx)(r.td,{children:"Indicates if BI Engine acceleration was used for the query"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"cache_hit"})}),(0,t.jsx)(r.td,{children:"Boolean indicating whether the query results were served from cache (impacts billing)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"query"})}),(0,t.jsx)(r.td,{children:"The SQL query text that was executed"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"operation"})}),(0,t.jsx)(r.td,{children:"Type of operation performed (derived from job metadata)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"package_version"})}),(0,t.jsx)(r.td,{children:"Version of the package or tool used to execute the query"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"license_type"})}),(0,t.jsx)(r.td,{children:"License type associated with the query execution"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"brand"})}),(0,t.jsx)(r.td,{children:"Brand or product associated with the query execution"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"tool"})}),(0,t.jsx)(r.td,{children:"Tool or application that submitted the query (e.g., Dataform, Looker Studio)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"looker_studio_datasource_id"})}),(0,t.jsx)(r.td,{children:"Unique identifier for Looker Studio datasource if query originated from Looker Studio"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"looker_studio_report_id"})}),(0,t.jsx)(r.td,{children:"Unique identifier for Looker Studio report if query originated from Looker Studio"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"requestor"})}),(0,t.jsx)(r.td,{children:"Entity or system that requested the query execution"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"total_slot_ms"})}),(0,t.jsx)(r.td,{children:"Total slot milliseconds consumed by the query (key metric for BigQuery performance analysis)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"total_bytes_processed"})}),(0,t.jsx)(r.td,{children:"Total bytes processed by the query (raw metric for cost calculation)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"total_bytes_billed"})}),(0,t.jsx)(r.td,{children:"Total bytes billed by BigQuery (actual metric used for billing calculation)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"processed_gb"})}),(0,t.jsx)(r.td,{children:"Total bytes processed converted to gigabytes for easier analysis (calculated as total_bytes_processed / 1e9)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"billed_gb"})}),(0,t.jsx)(r.td,{children:"Total bytes billed converted to gigabytes for cost monitoring (calculated as total_bytes_billed / 1e9)"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"info_schema_jobs_scripts",children:(0,t.jsx)(r.code,{children:"info_schema_jobs_scripts"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Purpose"}),": Script execution details with nested query breakdown"]}),"\n",(0,t.jsx)(r.p,{children:"Script-level analysis including individual query breakdown within each script execution (such as Dataform workflow runs)."}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Granularity"}),": Script executions with nested query details"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Column"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"script_id"})}),(0,t.jsx)(r.td,{children:"Unique identifier for the script job (parent job that contains multiple child queries)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"creation_date"})}),(0,t.jsx)(r.td,{children:"Date when the script job was created (partitioning column for performance optimization)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"project_id"})}),(0,t.jsx)(r.td,{children:"Google Cloud project ID where the script was executed"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"project_number"})}),(0,t.jsx)(r.td,{children:"Numeric identifier for the Google Cloud project"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"user_email"})}),(0,t.jsx)(r.td,{children:"Email address of the user who submitted the script job"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"job_type"})}),(0,t.jsx)(r.td,{children:"Type of BigQuery job for the script (typically 'QUERY' for script executions)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"statement_type"})}),(0,t.jsx)(r.td,{children:"Type of SQL statement for the script (should be 'SCRIPT' based on the filter logic) (cluster column for performance)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"script"})}),(0,t.jsx)(r.td,{children:"The complete SQL script text that was executed (contains multiple statements)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"operation"})}),(0,t.jsx)(r.td,{children:"Type of operation extracted from script metadata using regex pattern 'operation:([^,\"]+)'"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"package_version"})}),(0,t.jsx)(r.td,{children:"Version of the package extracted from script metadata using regex pattern 'package_version:([^,\"]+)'"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"license_type"})}),(0,t.jsx)(r.td,{children:"License type extracted from script metadata using regex pattern 'license_type:([^,\"]+)'"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"brand"})}),(0,t.jsx)(r.td,{children:"Brand identifier extracted from script metadata using regex pattern 'brand:([^,\"]+)'"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"tool"})}),(0,t.jsx)(r.td,{children:"Tool or application that submitted the script extracted using regex pattern 'tool:([^,\"]+)'"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"total_slot_ms"})}),(0,t.jsx)(r.td,{children:"Total slot milliseconds consumed by the entire script execution (aggregated across all child queries)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"total_bytes_processed"})}),(0,t.jsx)(r.td,{children:"Total bytes processed by the entire script (aggregated across all child queries)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"total_bytes_billed"})}),(0,t.jsx)(r.td,{children:"Total bytes billed by BigQuery for the entire script (aggregated across all child queries)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"processed_gb"})}),(0,t.jsx)(r.td,{children:"Total bytes processed converted to gigabytes for the script (calculated as total_bytes_processed / 1e9)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"billed_gb"})}),(0,t.jsx)(r.td,{children:"Total bytes billed converted to gigabytes for the script (calculated as total_bytes_billed / 1e9)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Nested Query Details"})}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries"})}),(0,t.jsx)(r.td,{children:"Array of individual queries executed within the script, each containing:"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].query_id"})}),(0,t.jsx)(r.td,{children:"Unique identifier for the individual query within the script"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].creation_date"})}),(0,t.jsx)(r.td,{children:"Date when the individual query was created (should match parent script creation_date)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].job_type"})}),(0,t.jsx)(r.td,{children:"Type of BigQuery job for the individual query (typically 'QUERY')"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].statement_type"})}),(0,t.jsx)(r.td,{children:"Type of SQL statement for the individual query (e.g., SELECT, INSERT, CREATE_TABLE, etc.)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].destination_table_dataset_id"})}),(0,t.jsx)(r.td,{children:"Dataset ID of the destination table if the query writes results to a table"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].destination_table_id"})}),(0,t.jsx)(r.td,{children:"Table ID of the destination table if the query writes results to a table"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].inserted_row_count"})}),(0,t.jsx)(r.td,{children:"Number of rows inserted by the individual query (for DML statements)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].query"})}),(0,t.jsx)(r.td,{children:"The SQL query text for the individual statement within the script"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].total_slot_ms"})}),(0,t.jsx)(r.td,{children:"Slot milliseconds consumed by this individual query"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].total_bytes_processed"})}),(0,t.jsx)(r.td,{children:"Bytes processed by this individual query"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].total_bytes_billed"})}),(0,t.jsx)(r.td,{children:"Bytes billed by BigQuery for this individual query"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].processed_gb"})}),(0,t.jsx)(r.td,{children:"Bytes processed converted to gigabytes for this query (calculated as total_bytes_processed / 1e9)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"queries[].billed_gb"})}),(0,t.jsx)(r.td,{children:"Bytes billed converted to gigabytes for this query (calculated as total_bytes_billed / 1e9)"})]})]})]}),"\n",(0,t.jsx)(r.admonition,{title:"Initial Processing Cost",type:"warning",children:(0,t.jsx)(r.p,{children:"The first run analyzes historical BigQuery job data from your configured start_date. This may incur significant processing costs for projects with extensive query history. Consider starting with a recent date and extending backward if needed."})}),"\n",(0,t.jsx)(r.h2,{id:"looker-studio-template",children:"Looker Studio Template"}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsxs)(r.p,{children:["We created a free-to-use Looker Studio template that was specifically designed to work with the GA4Dataform modules. Feel free to copy it and adapt it to your needs!\r\nYou can find it ",(0,t.jsx)(r.a,{href:"https://ga4dataform.com/dashboards/",children:"here"}),"."]})}),"\n",(0,t.jsx)(r.h3,{id:"template-features",children:"Template Features"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Daily cost trend analysis"}),"\n",(0,t.jsx)(r.li,{children:"Cost breakdown by category and user"}),"\n",(0,t.jsx)(r.li,{children:"Most expensive query identification"}),"\n",(0,t.jsx)(r.li,{children:"Storage cost analysis by dataset"}),"\n",(0,t.jsx)(r.li,{children:"Looker Studio usage monitoring"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Cost Attribution"}),": Track BigQuery spending by team, user, or project"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Query Optimization"}),": Identify and optimize expensive query patterns"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Storage Management"}),": Monitor table growth and identify cleanup opportunities"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Looker Studio Governance"}),": Track reporting usage and optimize data source queries"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Capacity Planning"}),": Forecast BigQuery costs based on usage trends"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Chargeback/Showback"}),": Allocate BigQuery costs to business units"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>n,x:()=>c});var t=s(6540);const i={},d=t.createContext(i);function n(e){const r=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),t.createElement(d.Provider,{value:r},e.children)}}}]);