"use strict";(self.webpackChunkga_4_dataform=self.webpackChunkga_4_dataform||[]).push([[242],{752:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var t=s(4848),i=s(8453);const a={title:"Labeling",description:"Labeling BigQuery Tables and Jobs",sidebar_position:8,slug:"/labelling"},r=void 0,o={id:"references/labelling",title:"Labeling",description:"Labeling BigQuery Tables and Jobs",source:"@site/docs/4-references/8-labelling.md",sourceDirName:"4-references",slug:"/labelling",permalink:"/docs/labelling",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/4-references/8-labelling.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Labeling",description:"Labeling BigQuery Tables and Jobs",sidebar_position:8,slug:"/labelling"},sidebar:"tutorialSidebar",previous:{title:"Transaction Model",permalink:"/docs/transaction-model-references"},next:{title:"Other References",permalink:"/docs/references-others"}},l={},d=[{value:"Add Labels to existing tables",id:"add-labels-to-existing-tables",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Labels in Google Cloud Platform are key-value paires you assign to ressources to manage costs at scale. Labels need to be attached to the ressources you are using and can be then use for filtering. As desribed in ",(0,t.jsx)(n.a,{href:"https://cloud.google.com/compute/docs/labeling-resources#what-are-labels",children:"Google Documentation"}),": ",(0,t.jsx)(n.em,{children:'"Information about labels are forwarded to the billing system that lets you break down your billed charges by label. With built-in billing reports, you can filter and group costs by resource labels. You can also use labels to query billing data exports."'})]}),"\n",(0,t.jsxs)(n.p,{children:["We've added 5 different labels: ",(0,t.jsx)(n.em,{children:"Operation"}),", ",(0,t.jsx)(n.em,{children:"Brand"}),", ",(0,t.jsx)(n.em,{children:"Licence type"}),", ",(0,t.jsx)(n.em,{children:"Package version"}),", ",(0,t.jsx)(n.em,{children:"Tool"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["They are defined as compilation variables in ",(0,t.jsx)(n.code,{children:"workflow_settings.yaml"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  LABEL_EXECUTION_OPERATION: daily_workflow\n  LABEL_GENERIC_BRAND: superformlabs\n  LABEL_GENERIC_LICENSE_TYPE: premium\n  LABEL_GENERIC_PACKAGE_VERSION: 2-0-0\n  LABEL_GENERIC_TOOL: ga4dataform\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Labels are passed to tables using Dataform's built-in label configuration in the config block at the beginning of each model:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'config {\n  type: "incremental",\n  description: "Intermediate incremental sessions table with modeling helpers implemented. 1 row per unique session_id. Contains only valid sessions.",\n  schema: dataform.projectConfig.vars.TRANSFORMATIONS_DATASET,\n  tags:[dataform.projectConfig.vars.GA4_DATASET,"sessions","intermediate"],\n  dependencies: ["source_categories"],\n  bigquery: {\n    partitionBy: "session_date",\n    clusterBy: [ "session_id" ],\n    labels: {\n        brand: "superformlabs",\n        license_type: "premium",\n        package_version: "2-0-0",\n        tool: "ga4dataform"\n        }\n  },\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Labels are passed to job executions using ",(0,t.jsx)(n.code,{children:"set @@query_label"})," in pre_operations block:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"pre_operations {\n  declare date_checkpoint DATE;\n  set @@query_label = \"operation:daily_workflow, brand:superformlabs, license_type:premium, package_version:2-0-0, tool:ga4dataform\";\n  set date_checkpoint = (\n    ${when(incremental(),\n      `select\n        coalesce(max(session_date)+1, date('${config.GA4_START_DATE}'))\n      from ${self()}\n      where is_final = true`,\n    `select date('${config.GA4_START_DATE}')`)}   /* the default, when it's not incremental */\n  );\n    -- delete some older data, since this may be updated later by GA4\n  ${\n    when(incremental(),\n      `delete from ${self()} where session_date >= date_checkpoint`\n      )\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"add-labels-to-existing-tables",children:"Add Labels to existing tables"}),"\n",(0,t.jsxs)(n.p,{children:["To add Labels to existing tables, use DDL statement ",(0,t.jsx)(n.code,{children:"ALTER TABLE"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"ALTER TABLE `superform_outputs_31337.ga4_events`\nSET OPTIONS (\n  labels = [('brand', 'superformlabs'), ('tool', 'ga4dataform'), ('licence_type', 'core'), ('package_version', 'v1-17-0')]);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To make this operation easier, we've added a dedicated file in ",(0,t.jsx)(n.code,{children:"definitions/core/utility/update_labels.sqlx"}),". By default this file is disable. You need to enable this file before executing it. You can run it from your Dataform workspace or copy the compiled Query and run it directly in BigQuery."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(6540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);