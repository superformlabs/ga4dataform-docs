"use strict";(self.webpackChunkga_4_dataform=self.webpackChunkga_4_dataform||[]).push([[3196],{720:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>t});var i=s(4848),l=s(8453);const r={title:"SQL Style Guide",description:"guidelines for writing SQL at SuperformLabs",slug:"/sql-style-guide"},d=void 0,c={id:"sql-style-guide",title:"SQL Style Guide",description:"guidelines for writing SQL at SuperformLabs",source:"@site/docs/sql-style-guide.md",sourceDirName:".",slug:"/sql-style-guide",permalink:"/docs/sql-style-guide",draft:!1,unlisted:!1,editUrl:"https://github.com/<your-org>/<your-repo>/edit/main/docs/docs/sql-style-guide.md",tags:[],version:"current",frontMatter:{title:"SQL Style Guide",description:"guidelines for writing SQL at SuperformLabs",slug:"/sql-style-guide"}},o={},t=[{value:"1. SQL Style in This Repo (BigQuery + Dataform)",id:"1-sql-style-in-this-repo-bigquery--dataform",level:2},{value:"File &amp; Object Structure",id:"file--object-structure",level:3},{value:"Config Block First, Always",id:"config-block-first-always",level:3},{value:"Incremental Logic &amp; Pre-operations",id:"incremental-logic--pre-operations",level:3},{value:"Common Query Patterns",id:"common-query-patterns",level:3},{value:"Dependencies &amp; Ordering",id:"dependencies--ordering",level:3},{value:"Assertions Style",id:"assertions-style",level:3},{value:"2. Dataform Code &amp; Repository Conventions",id:"2-dataform-code--repository-conventions",level:2},{value:"Project Configuration &amp; Variables",id:"project-configuration--variables",level:3},{value:"Includes &amp; Modularization",id:"includes--modularization",level:3},{value:"Tags",id:"tags",level:3},{value:"JS Blocks inside <code>.sqlx</code>",id:"js-blocks-inside-sqlx",level:3},{value:"Pre-operation Blocks",id:"pre-operation-blocks",level:3},{value:"Helpers &amp; Generated SQL",id:"helpers--generated-sql",level:3},{value:"Premium Module Pattern",id:"premium-module-pattern",level:3},{value:"BigQuery Specifics",id:"bigquery-specifics",level:3},{value:"Dependencies &amp; Assertions",id:"dependencies--assertions",level:3},{value:"Coding Style",id:"coding-style",level:3},{value:"Documentation Integration",id:"documentation-integration",level:3},{value:"Packages &amp; Versions",id:"packages--versions",level:3},{value:"TL;DR \u2013 How to Imitate This Repo Perfectly",id:"tldr--how-to-imitate-this-repo-perfectly",level:2}];function a(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"1-sql-style-in-this-repo-bigquery--dataform",children:"1. SQL Style in This Repo (BigQuery + Dataform)"}),"\n",(0,i.jsx)(n.h3,{id:"file--object-structure",children:"File & Object Structure"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["One model per file; file names are ",(0,i.jsx)(n.code,{children:"snake_case.sqlx"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Layering and naming:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"sources"})," declared in JS (",(0,i.jsx)(n.code,{children:"01_sources/declarations.js"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"intermediate"})," models prefixed with ",(0,i.jsx)(n.code,{children:"int_..."})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"outputs"})," without ",(0,i.jsx)(n.code,{children:"int_"})," (e.g., ",(0,i.jsx)(n.code,{children:"ga4_events"}),", ",(0,i.jsx)(n.code,{children:"ga4_sessions"}),", ",(0,i.jsx)(n.code,{children:"ga4_transactions"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"assertions"})," under ",(0,i.jsx)(n.code,{children:"assertions_*.sqlx"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Top-of-file block comment reserved for legal text placeholder."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"config-block-first-always",children:"Config Block First, Always"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"config { ... }"})," is always at the top with:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'type: "incremental"'})," or ",(0,i.jsx)(n.code,{children:'type: "table"'})," (assertions sometimes ",(0,i.jsx)(n.code,{children:'type: "operations"'}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"schema:"})," pulled from ",(0,i.jsx)(n.code,{children:"dataform.projectConfig.vars.*"})," (never hard\u2011coded)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tags:"})," always includes ",(0,i.jsx)(n.code,{children:"dataform.projectConfig.vars.GA4_DATASET"})," plus logical tags like ",(0,i.jsx)(n.code,{children:'"events"'}),", ",(0,i.jsx)(n.code,{children:'"sessions"'}),", ",(0,i.jsx)(n.code,{children:'"outputs"'}),", ",(0,i.jsx)(n.code,{children:'"intermediate"'}),", ",(0,i.jsx)(n.code,{children:'"assertions"'}),", or module tags (e.g., ",(0,i.jsx)(n.code,{children:'"bq_cost_monitoring"'}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"description:"})," short, action\u2011oriented sentence."]}),"\n",(0,i.jsxs)(n.li,{children:["BigQuery options set inside ",(0,i.jsx)(n.code,{children:"bigquery: { ... }"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"partitionBy:"})," a date column (e.g., ",(0,i.jsx)(n.code,{children:"event_date"}),", ",(0,i.jsx)(n.code,{children:"session_date"}),", ",(0,i.jsx)(n.code,{children:"transaction_date"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"clusterBy:"})," IDs or frequently filtered dimensions (e.g., ",(0,i.jsx)(n.code,{children:"session_id"}),", ",(0,i.jsx)(n.code,{children:"event_name"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"labels:"})," always via ",(0,i.jsx)(n.code,{children:'require("includes/core/helpers.js").helpers.storageLabels()'}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"incremental-logic--pre-operations",children:"Incremental Logic & Pre-operations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Incremental models ",(0,i.jsx)(n.strong,{children:"declare and set"})," a ",(0,i.jsx)(n.code,{children:"date_checkpoint"})," in a ",(0,i.jsx)(n.code,{children:"pre_operations { ... }"})," block:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Uses ",(0,i.jsx)(n.code,{children:"when(incremental(), ..., ...)"})," to compute:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"coalesce(max(<date>)+1, date('${config.GA4_START_DATE}'))"})," from ",(0,i.jsx)(n.code,{children:"self()"})," for incremental runs,"]}),"\n",(0,i.jsxs)(n.li,{children:["or ",(0,i.jsx)(n.code,{children:"date('${config.GA4_START_DATE}')"})," for full builds."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pre_operations"})," also sets ",(0,i.jsx)(n.code,{children:"@@query_label"})," to ",(0,i.jsx)(n.code,{children:"${helpers.executionLabels()}"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["For incrementals, they ",(0,i.jsx)(n.strong,{children:"DELETE"})," existing rows newer than ",(0,i.jsx)(n.code,{children:"date_checkpoint"})," from ",(0,i.jsx)(n.code,{children:"self()"})," before re\u2011inserting."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"common-query-patterns",children:"Common Query Patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Extensive use of CTEs (",(0,i.jsx)(n.code,{children:"WITH ... AS (...)"}),") for readability and staged logic."]}),"\n",(0,i.jsxs)(n.li,{children:["Column naming is ",(0,i.jsx)(n.strong,{children:"snake_case"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Deduplication with ",(0,i.jsx)(n.code,{children:"QUALIFY"})," and window functions."]}),"\n",(0,i.jsxs)(n.li,{children:["Use of ",(0,i.jsx)(n.code,{children:"COALESCE"}),", ",(0,i.jsx)(n.code,{children:"IF"}),", ",(0,i.jsx)(n.code,{children:"SAFE_CAST"}),", and helper\u2011generated SQL snippets."]}),"\n",(0,i.jsx)(n.li,{children:"Unnesting / parameter extraction driven by helper functions."}),"\n",(0,i.jsx)(n.li,{children:"Avoids hard\u2011coding; relies on config variables."}),"\n",(0,i.jsxs)(n.li,{children:["Documentation for columns attached via ",(0,i.jsx)(n.code,{children:'columns: require("includes/core/documentation/helpers.js").ga4*'}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"dependencies--ordering",children:"Dependencies & Ordering"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dependencies:"})," specified where needed."]}),"\n",(0,i.jsxs)(n.li,{children:["Mix of string names and ",(0,i.jsx)(n.code,{children:'{name: "table_name"}'})," objects."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"assertions-style",children:"Assertions Style"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Live under ",(0,i.jsx)(n.code,{children:"definitions/core/assertions/"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Generally ",(0,i.jsx)(n.code,{children:'type: "table"'})," (materialized) with clear ",(0,i.jsx)(n.code,{children:"tags"})," and ",(0,i.jsx)(n.code,{children:"description"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"DECLARE"})," variables and set defaults."]}),"\n",(0,i.jsxs)(n.li,{children:["Log results into a central table via ",(0,i.jsx)(n.code,{children:"assertion_logs.sqlx"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-dataform-code--repository-conventions",children:"2. Dataform Code & Repository Conventions"}),"\n",(0,i.jsx)(n.h3,{id:"project-configuration--variables",children:"Project Configuration & Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Centralized in ",(0,i.jsx)(n.code,{children:"workflow_settings.yaml"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["All dataset names and labels as ",(0,i.jsx)(n.strong,{children:"UPPER_SNAKE_CASE vars"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Models read schema and tags from ",(0,i.jsx)(n.code,{children:"dataform.projectConfig.vars"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"includes--modularization",children:"Includes & Modularization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Core, custom, documentation, and tests under ",(0,i.jsx)(n.code,{children:"includes/"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Config merging pattern:"})," ",(0,i.jsx)(n.code,{children:"helpers.getConfig()"})," merges ",(0,i.jsx)(n.code,{children:"{ ...coreConfig, ...customConfig }"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tags",children:"Tags"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Always present and consistent:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["First element: ",(0,i.jsx)(n.code,{children:"dataform.projectConfig.vars.GA4_DATASET"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Then domain/layer/feature tags."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"js-blocks-inside-sqlx",children:["JS Blocks inside ",(0,i.jsx)(n.code,{children:".sqlx"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'js {\n  const { helpers } = require("includes/core/helpers");\n  const config = helpers.getConfig();\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"pre-operation-blocks",children:"Pre-operation Blocks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Used to declare variables, set labels, compute ",(0,i.jsx)(n.code,{children:"date_checkpoint"}),", and run DELETEs for incrementals."]}),"\n",(0,i.jsxs)(n.li,{children:["Patterned use of ",(0,i.jsx)(n.code,{children:"when(incremental(), 'SQL for inc', 'SQL for full')"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"helpers--generated-sql",children:"Helpers & Generated SQL"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"All reusable SQL is produced via helper functions (camelCase)."}),"\n",(0,i.jsx)(n.li,{children:"Feature toggles read from config."}),"\n",(0,i.jsx)(n.li,{children:"Documentation columns augmented dynamically."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"premium-module-pattern",children:"Premium Module Pattern"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Premium files listed in ",(0,i.jsx)(n.code,{children:"installer_files_premium.yaml"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Models set ",(0,i.jsx)(n.code,{children:"disabled:"})," based on a feature flag."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"bigquery-specifics",children:"BigQuery Specifics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bigquery"})," config always in model ",(0,i.jsx)(n.code,{children:"config {}"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Partitioning/clustering consistent and aligned to access patterns."}),"\n",(0,i.jsx)(n.li,{children:"Labels enforced via helpers."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"dependencies--assertions",children:"Dependencies & Assertions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Assertions depend on ",(0,i.jsx)(n.code,{children:"assertion_logs"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Use explicit dependencies in arrays."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"coding-style",children:"Coding Style"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"JS/TS"}),": camelCase for functions; ",(0,i.jsx)(n.strong,{children:"UPPER_SNAKE_CASE"})," for constants."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Variables in YAML"}),": ",(0,i.jsx)(n.strong,{children:"UPPER_SNAKE_CASE"})," keys."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SQL"}),": snake_case columns; staged CTEs; explicit SELECT lists."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"documentation-integration",children:"Documentation Integration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Column docs centralized in JSON and attached via ",(0,i.jsx)(n.code,{children:"config.columns"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Custom parameters can augment docs at build time."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"packages--versions",children:"Packages & Versions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"package.json"})," pins ",(0,i.jsx)(n.code,{children:"@dataform/core"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Version labels stored in ",(0,i.jsx)(n.code,{children:"workflow_settings.yaml"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"tldr--how-to-imitate-this-repo-perfectly",children:"TL;DR \u2013 How to Imitate This Repo Perfectly"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Start each model with a ",(0,i.jsxs)(n.strong,{children:["complete ",(0,i.jsx)(n.code,{children:"config {}"})]}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Include a ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"js {}"})})," block to load helpers and merged config."]}),"\n",(0,i.jsxs)(n.li,{children:["For incrementals, use a ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pre_operations"})})," block to manage ",(0,i.jsx)(n.code,{children:"date_checkpoint"})," and DELETE overlaps."]}),"\n",(0,i.jsxs)(n.li,{children:["Write ",(0,i.jsx)(n.strong,{children:"snake_case"})," SQL with staged ",(0,i.jsx)(n.strong,{children:"CTEs"}),", ",(0,i.jsx)(n.strong,{children:"dedupe + QUALIFY"}),", and helper\u2011generated snippets."]}),"\n",(0,i.jsxs)(n.li,{children:["Keep ",(0,i.jsx)(n.strong,{children:"assertions"})," as materialized tables with variables, dependencies, and logging."]}),"\n",(0,i.jsxs)(n.li,{children:["Centralize all \u201cknobs\u201d in ",(0,i.jsx)(n.code,{children:"includes/custom/config.js"}),"; never hard\u2011code schema/project/labels."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var i=s(6540);const l={},r=i.createContext(l);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);