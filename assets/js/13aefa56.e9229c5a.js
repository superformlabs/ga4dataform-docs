"use strict";(self.webpackChunkga_4_dataform=self.webpackChunkga_4_dataform||[]).push([[9683],{1341:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=i(4848),t=i(8453);const r={title:"Custom Configuration",description:"Providing instructions on how to customize GA4Dataform.",slug:"/custom-configuration"},s=void 0,a={id:"core-concepts/custom-configuration",title:"Custom Configuration",description:"Providing instructions on how to customize GA4Dataform.",source:"@site/docs/core-concepts/custom-configuration.md",sourceDirName:"core-concepts",slug:"/custom-configuration",permalink:"/docs/custom-configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/<your-org>/<your-repo>/edit/main/docs/docs/core-concepts/custom-configuration.md",tags:[],version:"current",frontMatter:{title:"Custom Configuration",description:"Providing instructions on how to customize GA4Dataform.",slug:"/custom-configuration"},sidebar:"tutorialSidebar",previous:{title:"Core Concepts",permalink:"/docs/category/core-concepts"},next:{title:"Javascript vs SQL?",permalink:"/docs/syntax-choice"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Configuration Architecture",id:"configuration-architecture",level:2},{value:"Core Configuration",id:"core-configuration",level:3},{value:"Custom Configuration",id:"custom-configuration",level:3},{value:"Configuration Merging",id:"configuration-merging",level:3}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"The configuration system is arguably the most important element built into GA4Dataform. With a proper configuration, you can manage variables, modularize features, and control your data transformation pipeline without modifying core SQLX files. Think of the configuration as a control panel of JavaScript variables that determine what the final SQL output will look like."}),"\n",(0,o.jsx)(n.p,{children:"You can customize elements such as:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Start date for data processing"}),"\n",(0,o.jsx)(n.li,{children:"User properties to extract"}),"\n",(0,o.jsx)(n.li,{children:"Event and item parameters to unnest"}),"\n",(0,o.jsx)(n.li,{children:"Events to filter out"}),"\n",(0,o.jsx)(n.li,{children:"URL parameters to capture"}),"\n",(0,o.jsx)(n.li,{children:"User stitching \ud83d\udc8e"}),"\n",(0,o.jsx)(n.li,{children:"Session totals \ud83d\udc8e"}),"\n",(0,o.jsx)(n.li,{children:"Session-level custom parameters \ud83d\udc8e"}),"\n",(0,o.jsxs)(n.li,{children:["Support for ",(0,o.jsx)(n.code,{children:"fresh"})," and ",(0,o.jsx)(n.code,{children:"intraday"})," tables \ud83d\udc8e"]}),"\n",(0,o.jsx)(n.li,{children:"... and many more!"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This approach enables distribution of the same Dataform repository without hardcoded variables, making your implementation portable and maintainable."}),"\n",(0,o.jsx)(n.h2,{id:"configuration-architecture",children:"Configuration Architecture"}),"\n",(0,o.jsx)(n.p,{children:"GA4Dataform uses a dual-configuration approach with two separate files:"}),"\n",(0,o.jsx)(n.h3,{id:"core-configuration",children:"Core Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["found in ",(0,o.jsx)(n.code,{children:"includes/core/default_config.js"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Contains default settings for standard event parameters and click IDs"}),"\n",(0,o.jsx)(n.li,{children:"Provides fallback variables to prevent compilation errors"}),"\n",(0,o.jsx)(n.li,{children:"Subject to updates when new features are introduced"}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Should not be modified by users"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"custom-configuration",children:"Custom Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["found in ",(0,o.jsx)(n.code,{children:"includes/custom/config.js"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Your customization layer"}),"\n",(0,o.jsx)(n.li,{children:"Takes precedence over default configuration"}),"\n",(0,o.jsx)(n.li,{children:"Safe from updates and overwrites"}),"\n",(0,o.jsx)(n.li,{children:"Where all your specific settings should be defined"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"configuration-merging",children:"Configuration Merging"}),"\n",(0,o.jsx)(n.p,{children:"The two configuration objects are merged using a JavaScript spread operator that prioritizes your custom settings:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'const getConfig = () => {\n  const { coreConfig } = require("./default_config");\n  const { customConfig } = require("../custom/config");\n  return { ...coreConfig, ...customConfig };\n};\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Your values in ",(0,o.jsx)(n.code,{children:"config.js"})," will always take precedence over the defaults, ensuring your customizations are preserved during updates."]}),"\n",(0,o.jsxs)(n.p,{children:["All configuration variables and detailed instructions on how to use them available at the ",(0,o.jsx)(n.a,{href:"configuration-variable",children:"configuration variable page"}),"!"]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var o=i(6540);const t={},r=o.createContext(t);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);