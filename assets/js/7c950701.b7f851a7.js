"use strict";(self.webpackChunkga_4_dataform=self.webpackChunkga_4_dataform||[]).push([[369],{6557:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var i=s(4848),r=s(8453);const t={title:"Other References",description:"Overview of others functionalities and capabilities of the product.",slug:"/references-others"},a=void 0,c={id:"references/others",title:"Other References",description:"Overview of others functionalities and capabilities of the product.",source:"@site/docs/references/others.md",sourceDirName:"references",slug:"/references-others",permalink:"/docs/references-others",draft:!1,unlisted:!1,editUrl:"https://github.com/<your-org>/<your-repo>/edit/main/docs/docs/references/others.md",tags:[],version:"current",frontMatter:{title:"Other References",description:"Overview of others functionalities and capabilities of the product.",slug:"/references-others"},sidebar:"tutorialSidebar",previous:{title:"User Stitching",permalink:"/docs/user-stitching"},next:{title:"Data Dictionary",permalink:"/docs/category/data-dictionary"}},o={},l=[{value:"Common Session Processing Pipeline",id:"common-session-processing-pipeline",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Incremental loading"}),(0,i.jsx)("p",{children:"The incrementality works by processing only new GA4 event data without reprocessing the entire dataset. Here's a summary of how this is implemented:"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"1. Checkpoint Management:"})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.code,{children:"date_checkpoint"})," variable is declared and set to the day after the most recent ",(0,i.jsx)(n.code,{children:"event_date"})," found in the existing table (",(0,i.jsx)(n.code,{children:"stg_ga4_events"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"This ensures that only data newer than the most recent processed date is considered for the next load."}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"set date_checkpoint = (\n  select max(event_date) + 1 \n  from `project_id.superform_transformations.stg_ga4_events` \n  where is_final = true\n);\n"})}),(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Deletion of Updated Data:"})}),"\n"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Any existing records from the target table (",(0,i.jsx)(n.code,{children:"stg_ga4_events"}),") where ",(0,i.jsx)(n.code,{children:"event_date"})," is equal to or greater than the ",(0,i.jsx)(n.code,{children:"date_checkpoint"})," are deleted. This ensures that if GA4 has re-processed any past data, it gets removed and replaced by fresh data."]}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"delete from `project_id.superform_transformations.stg_ga4_events`\nwhere event_date >= date_checkpoint;\n"})}),(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Filtering New Data:"})}),"\n"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The pipeline processes only the new GA4 events by using ",(0,i.jsx)(n.code,{children:"_table_suffix"})," to fetch data from BigQuery tables (",(0,i.jsx)(n.code,{children:"events_*"}),") where the ",(0,i.jsx)(n.code,{children:"event_date"})," (derived from ",(0,i.jsx)(n.code,{children:"_table_suffix"}),") is greater than or equal to the ",(0,i.jsx)(n.code,{children:"date_checkpoint"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"This prevents reprocessing old event data."}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"and parse_date('%Y%m%d', regexp_extract(_table_suffix, '[0-9]+')) >= date_checkpoint;\n"})}),(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Filtering out Intraday Events:"})}),"\n"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Intraday data, which might still be incomplete or subject to change, is excluded from the query using this condition:"}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"and contains_substr(_table_suffix, 'intraday') is false;\n"})}),(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Finalization Logic:"})}),"\n"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The field ",(0,i.jsx)(n.code,{children:"is_final"})," is computed in the process to determine whether the data is final (older than 3 days). This is used to manage the checkpoint logic, ensuring incremental processing only on data that is finalized."]}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"date_diff(current_date(), cast(event_date as date format 'YYYYMMDD'), day) > 3 as is_final;\n"})})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Partitioning & Clustering"}),(0,i.jsx)("p",{children:"Our tables use date-based partitioning rather than GA4's default date-sharding approach, leading to better performance and simpler query patterns."}),(0,i.jsx)("p",{children:"We have implemented clustering on all tables to potentially optimize query speeds and reduce processing costs."}),(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Table"}),(0,i.jsx)(n.th,{children:"Partitioned By"}),(0,i.jsx)(n.th,{children:"Clustered By"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"demo_daily_sessions_report.sqlx"}),(0,i.jsx)(n.td,{children:"session_date"}),(0,i.jsx)(n.td,{children:"None"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ga4_events.sqlx"}),(0,i.jsx)(n.td,{children:"event_date"}),(0,i.jsx)(n.td,{children:"event_name, session_id"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"int_ga4_sessions.sqlx"}),(0,i.jsx)(n.td,{children:"session_date"}),(0,i.jsx)(n.td,{children:"session_id"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ga4_sessions.sqlx"}),(0,i.jsx)(n.td,{children:"session_date"}),(0,i.jsx)(n.td,{children:"session_id"})]})]})]})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Last Non-Direct Click Session Source"}),(0,i.jsxs)("p",{children:["Whether you agree with last non-direct click attribution or not, GA4 UI predominantly uses this model for conversion attribution. We replicated this approach to provide you with a more comparable dataset. Whether you should compare the GA4 UI to the BigQuery export is another question. For more insight, check out ",(0,i.jsx)("a",{href:"https://developers.google.com/analytics/blog/2023/bigquery-vs-ui",target:"_blank",children:"this article"}),"."]})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Sessionization"}),(0,i.jsx)("p",{children:"The GA4 session table provide the following information:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Source / Medium / Campaign"})," for at least three standard attributions:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Last click"}),"\n",(0,i.jsx)(n.li,{children:"Last non-direct click (with a particular lookback window, default 90 days)"}),"\n",(0,i.jsx)(n.li,{children:"First click"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["For each attribution, ",(0,i.jsx)(n.strong,{children:"Default Channel Groups"})," \u2014 following the same rules as in Google Analytics 4."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Landing page, landing page referrer, and exit page"}),", which can also be structured with a prepared hostname, page path, and query parameters."]}),"\n",(0,i.jsxs)(n.li,{children:["Session properties like: ",(0,i.jsx)(n.code,{children:"is_direct_session"}),", ",(0,i.jsx)(n.code,{children:"is_engaged_session"}),", ",(0,i.jsx)(n.code,{children:"is_debug_session"}),", ",(0,i.jsx)(n.code,{children:"is_cross_domain"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Unique session_id"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Session duration"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"engagement time"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User information:"})," ",(0,i.jsx)(n.code,{children:"user_id"}),", ",(0,i.jsx)(n.code,{children:"last_user_id"}),", ",(0,i.jsx)(n.code,{children:"user_pseudo_id"})]}),"\n",(0,i.jsx)(n.li,{children:"etc..."}),"\n"]}),(0,i.jsx)("p",{children:"These columns are often essential for building reports and simplifying data pipelines based on session data."}),(0,i.jsx)(n.h3,{id:"common-session-processing-pipeline",children:"Common Session Processing Pipeline"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Extract all necessary columns"})," from raw GA4 data to flat event tables."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clean and prepare events"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Group events into sessions"})," using the unique ",(0,i.jsx)(n.code,{children:"session_id"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Adjust Google\u2019s default source / medium rules"})," and add channel grouping."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add last non-direct attribution"}),"."]}),"\n"]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Sources to calculate source / medium include:"})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"collected_traffic_source"})," column"]}),"\n",(0,i.jsxs)(n.li,{children:["Source and medium from ",(0,i.jsx)(n.code,{children:"event_params"})]}),"\n",(0,i.jsxs)(n.li,{children:["UTM parameters from ",(0,i.jsx)(n.code,{children:"page_location"})]}),"\n",(0,i.jsxs)(n.li,{children:["Click IDs from ",(0,i.jsx)(n.code,{children:"event_params"})," or ",(0,i.jsx)(n.code,{children:"page_location"}),", such as ",(0,i.jsx)(n.code,{children:"gbraid"}),", ",(0,i.jsx)(n.code,{children:"wbraid"}),", ",(0,i.jsx)(n.code,{children:"gclid"}),", ",(0,i.jsx)(n.code,{children:"dclid"}),", ",(0,i.jsx)(n.code,{children:"srsltid"}),", and more."]}),"\n"]}),(0,i.jsx)("p",{children:"Once all sources are combined, additional logic is applied to create a fixed source/medium. For example:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"gclid"}),", ",(0,i.jsx)(n.code,{children:"gbraid"}),", or ",(0,i.jsx)(n.code,{children:"wbraid"})," is present, then source/medium should be ",(0,i.jsx)(n.code,{children:"google / cpc"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["If the referrer matches ",(0,i.jsx)(n.code,{children:"%android-app://com.google%"}),", then source/medium should be ",(0,i.jsx)(n.code,{children:"google / organic"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"There are special rules for click IDs, social platforms, and apps."}),"\n"]}),(0,i.jsx)("p",{children:"For channel grouping, Google provides a list with over 1,100 rules to define groups for known domains."}),(0,i.jsxs)("p",{children:["After these steps, we calculate last non-direct attribution and compare it with the GA UI and values in ",(0,i.jsx)(n.code,{children:"session_traffic_source_last_click"}),". Source/medium fixes can sometimes reduce direct traffic by 15-20%, improving attribution for paid campaigns."]})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Comprehensive GA4 Data Diagnostics"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Cardinality Analysis:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tracks unique pages, sources, mediums, and campaign names"}),"\n",(0,i.jsx)(n.li,{children:"Monitors hostname variations"}),"\n",(0,i.jsx)(n.li,{children:"Provides both daily and weekly views"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Data Quality Checks:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Identifies duplicate transaction IDs"}),"\n",(0,i.jsx)(n.li,{children:"Detects empty item payloads in ecommerce events"}),"\n",(0,i.jsx)(n.li,{children:"Monitors cookieless hits and measurement protocol hits"}),"\n",(0,i.jsx)(n.li,{children:"Tracks self-referral sessions"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Performance Metrics:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Complete ecommerce event tracking"}),"\n",(0,i.jsx)(n.li,{children:"Session quality monitoring"}),"\n",(0,i.jsx)(n.li,{children:"Referrer analysis and tracking"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Diagnostic Ratios:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Calculates percentages of problematic events"}),"\n",(0,i.jsx)(n.li,{children:"Tracks data collection quality metrics"}),"\n",(0,i.jsx)(n.li,{children:"Monitors implementation consistency"}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Event ID"}),(0,i.jsx)("p",{children:"We create a unique event ID based on event_name, event_timestamp, user_pseudo_id, ga_session_id, batch_page_id, batch_ordering_id, batch_event_index, engagement_time_msec."})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Timestamp Handling"}),(0,i.jsx)("p",{children:"Standardized timestamp struct containing event_date_YYYYMMDD, event_timestamp_micros, event_timestamp_utc, and user_first_touch_timestamp for consistent temporal analysis."})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Landing and Exit Page Tracking"}),(0,i.jsx)("p",{children:"We automatically capture and structure session landing and exit pages for seamless funnel analysis and user journey tracking."})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Session Indicators"}),(0,i.jsx)("p",{children:"Built-in flags for engaged sessions and debug sessions to help monitor data collection quality."})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Cross-Domain Tracking"}),(0,i.jsx)("p",{children:"Supports cross-domain tracking through _gl parameter handling in URL parameters."})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Traffic Source Detection"}),(0,i.jsx)("p",{children:"Boolean flag indicating the presence of traffic source data for comprehensive attribution tracking."})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Default Channel Grouping"}),(0,i.jsxs)("p",{children:["We\u2019ve implemented GA4\u2019s ",(0,i.jsx)(n.a,{href:"https://support.google.com/analytics/answer/9756891",children:"Default Channel Grouping"})," logic as a JavaScript function. While our implementation closely mirrors GA4's behavior, it may not provide exact matches in all cases. This is primarily because the BigQuery export does not include certain parameters that GA4 uses in its grouping logic, such as ",(0,i.jsx)(n.em,{children:"Source platform"})," and ",(0,i.jsx)(n.em,{children:"Google Ads campaign type"}),". As a result, discrepancies might appear between GA4 UI groupings and our classification."]})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Standard Event Parameters"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const CORE_PARAMS_ARRAY = [\n  // never remove, do not rename - this can break the core model\n\n  {\n      type: "string",\n      name: "ignore_referrer"\n  },\n  {\n      type: "int",\n      name: "ga_session_id"\n  },\n  {\n      type: "int",\n      name: "ga_session_number"\n  },\n  // and on and on\n];\n'})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)("strong",{children:"Description"}),": Essential event parameters that are required for the core functionality of GA4Dataform. These parameters should never be removed or renamed as they are critical for features like session tracking and referral handling. Each parameter is strictly typed and serves a specific purpose in the data model."]})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Standard URL Parameters"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const URL_PARAMS_ARRAY = [\n  // url parameters to extract to own column\n\n  { name: "utm_marketing_tactic",cleaningMethod: lowerSQL},\n  { name: "utm_source_platform",cleaningMethod: lowerSQL },\n  { name: "utm_term",cleaningMethod: lowerSQL },\n  { name: "utm_content",cleaningMethod: lowerSQL },\n  { name: "utm_source",cleaningMethod: lowerSQL },\n  { name: "utm_medium",cleaningMethod: lowerSQL },\n  { name: "utm_campaign",cleaningMethod: lowerSQL },\n  { name: "utm_id",cleaningMethod: lowerSQL },\n  { name: "utm_creative_format",cleaningMethod: lowerSQL },\n\n  // gtm and ga\n  { name: "gtm_debug" },\n  { name: "_gl" }\n];\n'})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)("strong",{children:"Description"}),": A predefined list of URL parameters that we extract and process from your website's URLs. This includes standard UTM parameters for campaign tracking, as well as Google Tag Manager and Google Analytics specific parameters. Each parameter can have an optional cleaning method (e.g., converting to lowercase) applied during extraction."]})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Click ID parsing from URL"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const CLICK_IDS_ARRAY = [\n// how to classify click ids (from collected_traffic_source) when there is no source/medium/campaign found?\n// (defaults should be fine)\n\n// name: from collected_traffic_source\n// medium and campaign: fill in with this value when needed (meaning: when found to be organic/referral)\n// note: we never overwrite MEDIUM, CAMPAIGN if explitly set. We only overwrite when campaign is "(organic)", "(referral)" or NULL\n{name:\'gclid\', source:"google", medium:"cpc", campaign: "(not set)", sources:["url","collected_traffic_source"] },\n{name:\'dclid\', source:"google", medium:"cpc", campaign: "(not set)", sources:["url","collected_traffic_source"] },\n{name:\'srsltid\', source:"google", medium:"organic", campaign: "Shopping Free Listings", sources:["url","collected_traffic_source"] },\n{name:\'gbraid\', source:"google",  medium:"cpc", campaign: "(not set)", sources:["url"]},\n{name:\'wbraid\', source:"google",  medium:"cpc", campaign: "(not set)", sources:["url"] },\n{name:\'msclkid\', source:"bing", medium:"cpc", campaign: "(not set)", sources:["url"] }\n];\n'})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)("strong",{children:"Description"}),": Defines how different advertising click IDs (like Google Ads' gclid or Microsoft Ads' msclkid) should be interpreted when determining traffic sources. Each entry specifies default values for source, medium, and campaign that should be applied when these IDs are present but no explicit UTM parameters are set. This ensures consistent attribution across different advertising platforms."]})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"DATA_IS_FINAL_DAYS - Incrementality variable"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const DATA_IS_FINAL_DAYS = 3;\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"date_diff(current_date(), cast(event_date as date format 'YYYYMMDD'), day) > ${config.DATA_IS_FINAL_DAYS} as is_final\n"})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)("strong",{children:"Description"}),': Defines how many days must pass before we consider GA4 data to be "final" (no longer subject to changes). This value is used in incremental processing to determine which data should be reprocessed. The default value is set to 3 days because GA4 Measurement Protocol allows hits to be sent up to 72 hours in the past.']})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);